<div>
  @if (Photos == null || (Photos != null && !Photos.Any()))
  {
    <img src="images/NoImage.png" class="card-img-top" />
  }
  else
  {
    <div id="@($"carouselExample{RoomId}")" class="carousel slide">
      <div class="carousel-inner">
        <div class="carousel-item active">
          <img src="data:image/png;base64,@Convert.ToBase64String(Photos[0])" class="d-block w-100" />
        </div>
        @for (int i = 1; i < Photos.Count(); i++)
        {
          <div class="carousel-item">
            <img src="data:image/png;base64,@Convert.ToBase64String(Photos[i])" class="d-block w-100" />
          </div>
        }
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="@($"#carouselExample{RoomId}")" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="@($"#carouselExample{RoomId}")" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>

  }
</div>

@code {

  [Parameter, EditorRequired]
  public List<byte[]> Photos { get; set; } = default!; // определяет обязательный параметр компонента

  /// <summary> id комнаты необходим для карусели картинок </summary>
  [Parameter, EditorRequired]
  public Guid RoomId { get; set; }
}
