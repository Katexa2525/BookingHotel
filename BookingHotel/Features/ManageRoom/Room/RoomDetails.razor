
<div class="drawer-wrapper @(_isOpen ? "slide" : "")">
  <div class="drawer-mask"></div>
  <div class="drawer">
    @if (_activeRoom is not null)
    {
      <div class="drawer-content">

        <div class="trail-details">
          <h3>@_activeRoom.RoomTypeId</h3>
          <div class="d-flex justify-content-between">
            <h6 class="mb-3 text-muted"> <span class="oi oi-people"></span> @_activeRoom.PeopleNumber </h6>
            <h6 class="mb-3 text-muted"> <span class="oi oi oi-loop-square"></span> @_activeRoom.Square </h6>
          </div>
          <p class="mt-4">@_activeRoom.Description</p>
        </div>
      </div>
      <div class="drawer-controls">
        <button class="btn btn-secondary" @onclick="Close">Close</button>
      </div>
    }
  </div>
</div>

@code {
  private bool _isOpen;
  private RoomDto? _activeRoom;

  /// <summary>Параметр компонента определяется как открытое свойство, декорирование атрибутами</summary>
  [Parameter, EditorRequired]
  public RoomDto? Room { get; set; }

  protected override void OnParametersSet()
  {
    if (Room != null)
    {
      _activeRoom = Room;
      _isOpen = true;
    }
  }

  private void Close()
  {
    _activeRoom = null;
    _isOpen = false;
  }
}

