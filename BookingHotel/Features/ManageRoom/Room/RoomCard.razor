@inject NavigationManager NavManager

<div class="card shadow">

  <div class="card-body">
    <div class="container">
      <div class="row">

        <div class="col-3">
          <img src="images/NoImage.png" class="card-img-top">
        </div>

        <div class="col-5">

          @if (Room.RoomType is not null)
          {
            <h5 class="card-title">@Room.RoomType.Name</h5>
          }
          else
          {
            <h5 class="card-title">@Room.Id</h5>
          }
          <div class="d-flex justify-content-between">
            <h6 class="card-subtitle mb-3 text-muted"><span class="oi oi-people"></span> @Room.PeopleNumber</h6>
            <h6 class="card-subtitle mb-3 text-muted"><span class="oi oi-loop-square"></span> @Room.Square </h6>
          </div>

          @* Удобства в номере *@
          <div class="row align-items-start">
            <div class="col-sm-8">
              <div class="d-flex">
                @foreach (var item in Room.RoomFacilities)
                {
                  <h6 class="m-3">@item.Name</h6>
                }
              </div>
            </div>
          </div>

          <div class="d-flex justify-content-between">
            <div class="mt-4 align-bottom">
              <button class="btn btn-outline-secondary float-right" title="Редактирование"
                      @onclick="@(() => NavManager.NavigateTo($"/hotels/{HotelId}/rooms/{Room.Id}"))">
                <i class="bi bi-pencil"></i>
              </button>
            </div>
            <div class="mt-4 align-bottom">
              <button type="button" class="btn btn-warning" @onclick="@(async () => OnSelected.InvokeAsync(Room))">
                Забронировать
              </button>
            </div>
          </div>

        </div>

        <div class="col-4">
          <h5 class="card-body">@Room.Description</h5>
        </div>

      </div>
    </div>

  </div>
</div>

@code {

  [Parameter, EditorRequired]
  public RoomDto Room { get; set; } = default!; // определяет обязательный параметр компонента

  [Parameter, EditorRequired]
  public Guid HotelId { get; set; } = default!;

  /// <summary>События определяются с использованием типов делегатов Action или Func, или через тип EventCallback </summary>
  [Parameter, EditorRequired]
  public EventCallback<RoomDto> OnSelected { get; set; }
}
