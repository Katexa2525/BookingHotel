@inject AppState AppState

<CascadingAuthenticationState>
  <Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
      <!-- <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" /> -->
      <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
        <Authorizing>
          <text>Определение состояния сеанса, пожалуйста, подождите ...</text>
        </Authorizing>
        <NotAuthorized>
          <text> Нет прав, чтобы получить доступ к этой странице. Вам нужно войти в систему.</text>
        </NotAuthorized>
      </AuthorizeRouteView>
      <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
      <PageTitle>Не найдено</PageTitle>
      <LayoutView Layout="@typeof(MainLayout)">
        <NavigationСhain LastChainName="Not found address" />
        <p role="alert">Извините, по этому адресу нет ничего.</p>
      </LayoutView>
    </NotFound>
  </Router>
</CascadingAuthenticationState>

@code {
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      //При первой отрисовке компонента App инициализирую AppState
      await AppState.Initialize();
    }
  }
}